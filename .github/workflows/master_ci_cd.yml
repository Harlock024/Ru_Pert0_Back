name: ru_pert0 CI/CD Workflow for master
on: 
  push:
    branches: [ "master" ] 
  pull_request:
    branches: [ "master" ] 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-restore --verbosity normal

      - name: Publish the application
        run: dotnet publish --configuration Release --output ./publish

      - name: Show output directory
        run: ls -la ./publish

      - name: Download, run httpd image, container name serving_base, map to port 8080
        run: |
          docker run -d -p 8080:80 --name serving_base httpd

      - name: Show running containers
        run: docker ps

      - name: Copy published app to container
        run: |
          docker cp ./publish/. serving_base:/usr/local/apache2/htdocs

      - name: List files in container
        run: |
          docker exec serving_base ls -la /usr/local/apache2/htdocs
          
      - name: Build the custom Docker image
        run: |
            docker commit --change "ENV MODEL_NAME ${{ secrets.MODEL_NAME }}" \
            --change "EXPOSE 8080" \
            serving_base ${{ secrets.DOCKER_USER }}/${{ secrets.MODEL_NAME }}:${{ github.sha }}

      - name: Show Docker images
        run: docker images
        
      - name: Docker login
        env: 
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: | 
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u $DOCKER_USER --password-stdin
          
      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_USER }}/${{ secrets.MODEL_NAME }}:${{ github.sha }}

      - name: Verify the server is running
        run: |
          curl -I http://localhost:8080
